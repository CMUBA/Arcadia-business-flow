// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 商家表
model Merchant {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String
  description String?
  location    Json?
  images      String[]
  points      Int          @default(0)
  createdAt   DateTime     @default(now()) @map("created_at")
  coupons     Coupon[]
  rechargeCodes RechargeCode[]

  @@map("merchants")
}

// 优惠券类型表
model CouponType {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  coupons     Coupon[]

  @@map("coupon_types")
}

// 优惠券表
model Coupon {
  id                Int            @id @default(autoincrement())
  merchant          Merchant       @relation(fields: [merchantId], references: [id])
  merchantId        Int            @map("merchant_id")
  type             CouponType     @relation(fields: [typeId], references: [id])
  typeId           Int            @map("type_id")
  name             String
  description      String?
  discountValue    Decimal        @map("discount_value")
  totalQuantity    Int            @map("total_quantity")
  remainingQuantity Int           @map("remaining_quantity")
  pointsPrice      Int            @map("points_price")
  startDate        DateTime       @map("start_date")
  endDate          DateTime       @map("end_date")
  createdAt        DateTime       @default(now()) @map("created_at")
  playerCoupons    PlayerCoupon[]

  @@map("coupons")
}

// 玩家优惠券表
model PlayerCoupon {
  id          Int       @id @default(autoincrement())
  coupon      Coupon    @relation(fields: [couponId], references: [id])
  couponId    Int       @map("coupon_id")
  playerId    String    @map("player_id")
  passCode    String    @unique @map("pass_code")
  qrCode      String?   @map("qr_code")
  status      String    @default("unused")
  usedAt      DateTime? @map("used_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("player_coupons")
}

// 充值码表
model RechargeCode {
  id          Int       @id @default(autoincrement())
  code        String    @unique
  points      Int
  merchant    Merchant  @relation(fields: [merchantId], references: [id])
  merchantId  Int       @map("merchant_id")
  status      String    @default("unused")
  usedAt      DateTime? @map("used_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("recharge_codes")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
